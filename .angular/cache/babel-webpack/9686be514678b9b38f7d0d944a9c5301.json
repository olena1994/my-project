{"ast":null,"code":"// import { HttpClient, HttpErrorResponse } from '@angular/common/http';\n// import { CartService } from './cart.service';\n// import { Phone } from './models/phone';\n//\n// let httpClientSpy: jasmine.SpyObj<HttpClient>;\n// let cartService: CartService;\n//\n// beforeEach(() => {\n//   httpClientSpy = jasmine.createSpyObj('HttpClient', ['get']);\n//   cartService = new CartService(httpClientSpy);\n// });\n//\n// it('should return expected carts (HttpClient called once)', (done: DoneFn) => {\n//   const expectedHeroes: Phone[] =\n//     [\n//       { id: '1', age: 1, snippet: 'dfb', imageUrl: 'drfgsb', name: 'zdrvs', price: 34 },\n//       { id: '2', age: 3, snippet: 'dfbfb', imageUrl: 'drfgxfbsb', name: 'zdrxfgbvs', price: 334 },\n//     ];\n//\n//   httpClientSpy.get.and.returnValue(asyncData(expectedHeroes));\n//\n//   cartService.getAll().subscribe({\n//     next: carts => {\n//       expect(carts)\n//         .withContext('expected heroes')\n//         .toEqual(expectedHeroes);\n//       done();\n//     },\n//     error: done.fail\n//   });\n//   expect(httpClientSpy.get.calls.count())\n//     .withContext('one call')\n//     .toBe(1);\n// });\n//\n// it('should return an error when the server returns a 404', (done: DoneFn) => {\n//   const errorResponse = new HttpErrorResponse({\n//     error: 'test 404 error',\n//     status: 404, statusText: 'Not Found'\n//   });\n//\n//   httpClientSpy.get.and.returnValue(asyncError(errorResponse));\n//\n//   cartService.getAll().subscribe({\n//     next: carts => done.fail('expected an error, not heroes'),\n//     error: error  => {\n//       expect(error.message).toContain('test 404 error');\n//       done();\n//     }\n//   });\n// });\nimport { CartService } from './cart.service';\nimport { TestBed, inject } from '@angular/core/testing';\ndescribe('CartService', () => {\n  let cartService;\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      providers: [CartService]\n    });\n  });\n  it('should retrieve all phones', () => {});\n  it('should be created', inject([CartService], cartService => {\n    expect(cartService).toBeTruthy();\n  }));\n});","map":{"version":3,"sources":["/Users/olena.kopyl/Documents/projects/my-project/src/app/cart.service.spec.ts"],"names":["CartService","TestBed","inject","describe","cartService","beforeEach","configureTestingModule","providers","it","expect","toBeTruthy"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,uBAAhC;AACAC,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC1B,MAAIC,WAAJ;AACAC,EAAAA,UAAU,CAAC,MAAM;AACbJ,IAAAA,OAAO,CAACK,sBAAR,CAA+B;AAC3BC,MAAAA,SAAS,EAAE,CACPP,WADO;AADgB,KAA/B;AAKH,GANS,CAAV;AAOAQ,EAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM,CACtC,CADC,CAAF;AAEAA,EAAAA,EAAE,CAAC,mBAAD,EAAsBN,MAAM,CAAC,CAACF,WAAD,CAAD,EAAiBI,WAAD,IAAiB;AAC3DK,IAAAA,MAAM,CAACL,WAAD,CAAN,CAAoBM,UAApB;AACH,GAF6B,CAA5B,CAAF;AAGH,CAdO,CAAR","sourcesContent":["// import { HttpClient, HttpErrorResponse } from '@angular/common/http';\n// import { CartService } from './cart.service';\n// import { Phone } from './models/phone';\n//\n// let httpClientSpy: jasmine.SpyObj<HttpClient>;\n// let cartService: CartService;\n//\n// beforeEach(() => {\n//   httpClientSpy = jasmine.createSpyObj('HttpClient', ['get']);\n//   cartService = new CartService(httpClientSpy);\n// });\n//\n// it('should return expected carts (HttpClient called once)', (done: DoneFn) => {\n//   const expectedHeroes: Phone[] =\n//     [\n//       { id: '1', age: 1, snippet: 'dfb', imageUrl: 'drfgsb', name: 'zdrvs', price: 34 },\n//       { id: '2', age: 3, snippet: 'dfbfb', imageUrl: 'drfgxfbsb', name: 'zdrxfgbvs', price: 334 },\n//     ];\n//\n//   httpClientSpy.get.and.returnValue(asyncData(expectedHeroes));\n//\n//   cartService.getAll().subscribe({\n//     next: carts => {\n//       expect(carts)\n//         .withContext('expected heroes')\n//         .toEqual(expectedHeroes);\n//       done();\n//     },\n//     error: done.fail\n//   });\n//   expect(httpClientSpy.get.calls.count())\n//     .withContext('one call')\n//     .toBe(1);\n// });\n//\n// it('should return an error when the server returns a 404', (done: DoneFn) => {\n//   const errorResponse = new HttpErrorResponse({\n//     error: 'test 404 error',\n//     status: 404, statusText: 'Not Found'\n//   });\n//\n//   httpClientSpy.get.and.returnValue(asyncError(errorResponse));\n//\n//   cartService.getAll().subscribe({\n//     next: carts => done.fail('expected an error, not heroes'),\n//     error: error  => {\n//       expect(error.message).toContain('test 404 error');\n//       done();\n//     }\n//   });\n// });\nimport { CartService } from './cart.service';\nimport { TestBed, inject } from '@angular/core/testing';\ndescribe('CartService', () => {\n    let cartService;\n    beforeEach(() => {\n        TestBed.configureTestingModule({\n            providers: [\n                CartService,\n            ]\n        });\n    });\n    it('should retrieve all phones', () => {\n    });\n    it('should be created', inject([CartService], (cartService) => {\n        expect(cartService).toBeTruthy();\n    }));\n});\n"]},"metadata":{},"sourceType":"module"}