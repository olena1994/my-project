{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { CartService } from './cart.service';\nlet httpClientSpy;\nlet cartService;\nbeforeEach(() => {\n  httpClientSpy = jasmine.createSpyObj('HttpClient', ['get']);\n  cartService = new CartService(httpClientSpy);\n});\nit('should return an error when the server returns a 404', done => {\n  const errorResponse = new HttpErrorResponse({\n    error: 'test 404 error',\n    status: 404,\n    statusText: 'Not Found'\n  });\n  httpClientSpy.get.and.returnValue(asyncError(errorResponse));\n  cartService.getHeroes().subscribe({\n    next: heroes => done.fail('expected an error, not heroes'),\n    error: error => {\n      expect(error.message).toContain('test 404 error');\n      done();\n    }\n  });\n});","map":{"version":3,"sources":["/Users/olena.kopyl/Documents/projects/my-project/src/app/cart.service.spec.ts"],"names":["HttpErrorResponse","CartService","httpClientSpy","cartService","beforeEach","jasmine","createSpyObj","it","done","errorResponse","error","status","statusText","get","and","returnValue","asyncError","getHeroes","subscribe","next","heroes","fail","expect","message","toContain"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,IAAIC,aAAJ;AACA,IAAIC,WAAJ;AACAC,UAAU,CAAC,MAAM;AACbF,EAAAA,aAAa,GAAGG,OAAO,CAACC,YAAR,CAAqB,YAArB,EAAmC,CAAC,KAAD,CAAnC,CAAhB;AACAH,EAAAA,WAAW,GAAG,IAAIF,WAAJ,CAAgBC,aAAhB,CAAd;AACH,CAHS,CAAV;AAIAK,EAAE,CAAC,sDAAD,EAA0DC,IAAD,IAAU;AACjE,QAAMC,aAAa,GAAG,IAAIT,iBAAJ,CAAsB;AACxCU,IAAAA,KAAK,EAAE,gBADiC;AAExCC,IAAAA,MAAM,EAAE,GAFgC;AAE3BC,IAAAA,UAAU,EAAE;AAFe,GAAtB,CAAtB;AAIAV,EAAAA,aAAa,CAACW,GAAd,CAAkBC,GAAlB,CAAsBC,WAAtB,CAAkCC,UAAU,CAACP,aAAD,CAA5C;AACAN,EAAAA,WAAW,CAACc,SAAZ,GAAwBC,SAAxB,CAAkC;AAC9BC,IAAAA,IAAI,EAAEC,MAAM,IAAIZ,IAAI,CAACa,IAAL,CAAU,+BAAV,CADc;AAE9BX,IAAAA,KAAK,EAAEA,KAAK,IAAI;AACZY,MAAAA,MAAM,CAACZ,KAAK,CAACa,OAAP,CAAN,CAAsBC,SAAtB,CAAgC,gBAAhC;AACAhB,MAAAA,IAAI;AACP;AAL6B,GAAlC;AAOH,CAbC,CAAF","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { CartService } from './cart.service';\nlet httpClientSpy;\nlet cartService;\nbeforeEach(() => {\n    httpClientSpy = jasmine.createSpyObj('HttpClient', ['get']);\n    cartService = new CartService(httpClientSpy);\n});\nit('should return an error when the server returns a 404', (done) => {\n    const errorResponse = new HttpErrorResponse({\n        error: 'test 404 error',\n        status: 404, statusText: 'Not Found'\n    });\n    httpClientSpy.get.and.returnValue(asyncError(errorResponse));\n    cartService.getHeroes().subscribe({\n        next: heroes => done.fail('expected an error, not heroes'),\n        error: error => {\n            expect(error.message).toContain('test 404 error');\n            done();\n        }\n    });\n});\n"]},"metadata":{},"sourceType":"module"}